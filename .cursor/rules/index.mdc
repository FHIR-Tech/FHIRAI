---
description:
globs:
alwaysApply: true
---

# FHIRAI - Cursor AI Project Index (Enhanced)

## üèóÔ∏è Project Overview
**FHIRAI** - Clean Architecture ASP.NET Core app with CQRS, PostgreSQL, Azure deployment. Template: Clean.Architecture.Solution.Template v9.0.12.

## üìÅ Core Structure
```
src/
‚îú‚îÄ‚îÄ Domain/           # Business entities, value objects, events
‚îú‚îÄ‚îÄ Application/      # Commands, queries, handlers, DTOs  
‚îú‚îÄ‚îÄ Infrastructure/   # Database, external services, identity
‚îî‚îÄ‚îÄ Web/             # API endpoints, configuration
```

## üîç Keyword Mapping to Documentation

### Architecture & Design
- **Clean Architecture** ‚Üí `docs/cursor-agent/workflows/ARCHITECTURE_GUIDE.md` ‚Üí Core Architecture Principles
- **CQRS** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Command Pattern & Query Pattern
- **SOLID** ‚Üí `docs/cursor-agent/workflows/ARCHITECTURE_GUIDE.md` ‚Üí SOLID Principles
- **Domain-Driven Design** ‚Üí `docs/cursor-agent/workflows/ARCHITECTURE_GUIDE.md` ‚Üí Domain-Driven Design
- **Design Patterns** ‚Üí `docs/cursor-agent/workflows/ARCHITECTURE_GUIDE.md` ‚Üí Design Patterns

### Development Workflow
- **New Feature** ‚Üí `docs/cursor-agent/workflows/IMPLEMENTATION_CHECKLIST.md` ‚Üí Feature Implementation Checklist
- **Code Generation** ‚Üí `docs/cursor-agent/workflows/CURSOR_AI_QUICK_REFERENCE.md` ‚Üí Code Generation Commands
- **Testing** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Testing Patterns
- **Code Review** ‚Üí `docs/cursor-agent/workflows/IMPLEMENTATION_CHECKLIST.md` ‚Üí Code Review Checklist

### Security & Authentication
- **Authentication** ‚Üí `docs/cursor-agent/workflows/SECURITY_GUIDE.md` ‚Üí Authentication System
- **Authorization** ‚Üí `docs/cursor-agent/workflows/SECURITY_GUIDE.md` ‚Üí Authorization Rules
- **JWT** ‚Üí `docs/cursor-agent/workflows/SECURITY_GUIDE.md` ‚Üí JWT Bearer Tokens
- **Azure Key Vault** ‚Üí `docs/cursor-agent/workflows/SECURITY_GUIDE.md` ‚Üí Azure Key Vault Integration
- **Security Best Practices** ‚Üí `docs/cursor-agent/workflows/SECURITY_GUIDE.md` ‚Üí Security Best Practices

### Database & Infrastructure
- **Entity Framework** ‚Üí `docs/cursor-agent/workflows/DATABASE_GUIDE.md` ‚Üí Entity Framework Configuration
- **PostgreSQL** ‚Üí `docs/cursor-agent/workflows/DATABASE_GUIDE.md` ‚Üí Database Design Principles
- **Migrations** ‚Üí `docs/cursor-agent/workflows/DATABASE_GUIDE.md` ‚Üí Migration Management
- **Database Performance** ‚Üí `docs/cursor-agent/workflows/DATABASE_GUIDE.md` ‚Üí Performance Optimization
- **Database Security** ‚Üí `docs/cursor-agent/workflows/DATABASE_GUIDE.md` ‚Üí Database Security

### API Development
- **Endpoints** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Endpoint Pattern
- **Minimal APIs** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Endpoint Pattern
- **Validation** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Command Pattern
- **DTOs** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí DTO Pattern
- **MediatR** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí MediatR I/O Patterns
- **ISender** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Using ISender in Endpoints
- **Paging** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Paging Patterns
- **Search** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Paging Query Handlers

### API Pattern Rules (CRITICAL - AUTO-DISCOVERY)
- **API Pattern** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_INDEX.md` ‚Üí **MAIN INDEX** - Auto-discovery guide
- **Quick Reference** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí **READ FIRST** - Immediate decision matrix
- **Decision Matrix** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_DECISION_MATRIX.md` ‚Üí **READ SECOND** - Detailed decision logic
- **Rule Engine** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_RULE_ENGINE.md` ‚Üí **READ THIRD** - Algorithm implementation
- **Optimized Guide** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_OPTIMIZED_GUIDE.md` ‚Üí Enhanced rules with improvements
- **Test Cases** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_TEST_CASES.md` ‚Üí Test scenarios and validation
- **Live Demo** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_DEMO.md` ‚Üí Real-world examples
- **Self Test** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_SELF_TEST.md` ‚Üí Self-reading capability test
- **Test Results** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_TEST_RESULTS.md` ‚Üí Implementation analysis

### FHIR Healthcare Resources
- **Patient** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí FHIR Endpoints (MANDATORY)
- **Observation** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí FHIR Endpoints (MANDATORY)
- **Medication** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí FHIR Endpoints (MANDATORY)
- **Healthcare** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí FHIR Endpoints (MANDATORY)
- **Medical** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí FHIR Endpoints (MANDATORY)
- **Clinical** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí FHIR Endpoints (MANDATORY)
- **Condition** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí FHIR Endpoints (MANDATORY)
- **Encounter** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí FHIR Endpoints (MANDATORY)
- **Diagnosis** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí FHIR Endpoints (MANDATORY)
- **Treatment** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí FHIR Endpoints (MANDATORY)

### Business/System Resources
- **User** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Controllers (RECOMMENDED)
- **Todo** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Controllers (RECOMMENDED)
- **Task** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Controllers (RECOMMENDED)
- **Admin** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Controllers (RECOMMENDED)
- **System** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Controllers (RECOMMENDED)
- **Analytics** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Controllers (RECOMMENDED)
- **Report** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Controllers (RECOMMENDED)
- **Dashboard** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Controllers (RECOMMENDED)
- **Organization** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Controllers (RECOMMENDED)
- **Department** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Controllers (RECOMMENDED)

### Special Operations
- **Health** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Minimal API Endpoints (FLEXIBLE)
- **Webhook** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Minimal API Endpoints (FLEXIBLE)
- **Integration** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Minimal API Endpoints (FLEXIBLE)
- **Export** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Minimal API Endpoints (FLEXIBLE)
- **Import** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Minimal API Endpoints (FLEXIBLE)
- **Auth** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Minimal API Endpoints (FLEXIBLE)
- **Callback** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Minimal API Endpoints (FLEXIBLE)
- **Third-party** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Minimal API Endpoints (FLEXIBLE)

### Code Quality
- **Naming Conventions** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Naming Conventions
- **Code Organization** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Code Organization
- **Performance** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Performance Guidelines
- **Error Handling** ‚Üí `docs/cursor-agent/workflows/CURSOR_AI_QUICK_REFERENCE.md` ‚Üí Common Mistakes

### Documentation & Reporting
- **Implementation Reports** ‚Üí `docs/cursor-agent/workflows/CURSOR_AI_RULES.md` ‚Üí Cursor AI Specific Rules
- **API Documentation** ‚Üí `docs/api/` ‚Üí API specifications, guides, examples
- **Architecture Docs** ‚Üí `docs/architecture/` ‚Üí ADRs, diagrams, decisions
- **Session Logs** ‚Üí `docs/cursor-agent/logs/` ‚Üí Session tracking and audit trails

## üöÄ Quick Commands
```bash
# Build & Run
dotnet build -tl
cd ./src/Web/ && dotnet watch run

# Code Generation
dotnet new ca-usecase --name Create[Entity] --feature-name [FeatureName] --usecase-type command --return-type int
dotnet new ca-usecase -n Get[Entities] -fn [FeatureName] -ut query -rt [Entities]Vm

# Testing
dotnet test

# Azure Deployment
az login && azd up
```

## üìÅ Key File Locations
- **Domain Entities**: `src/Domain/Entities/`
- **Application Commands**: `src/Application/[FeatureName]/Commands/`
- **Application Queries**: `src/Application/[FeatureName]/Queries/`
- **API Endpoints**: `src/Web/Endpoints/`
- **API Controllers**: `src/Web/Controllers/`
- **Database Context**: `src/Infrastructure/Data/ApplicationDbContext.cs`
- **Infrastructure**: `infra/main.bicep`
- **API Documentation**: `docs/api/`
- **Implementation Reports**: `docs/cursor-agent/reports/`
- **Sample Data**: `scripts/samples/`
- **Cursor Agent Rules**: `docs/cursor-agent/workflows/`

## üè∑Ô∏è Naming Patterns
- **Entities**: `{EntityName}.cs`
- **Commands**: `{CommandName}Command.cs`, `{CommandName}CommandHandler.cs`
- **Queries**: `{QueryName}Query.cs`, `{QueryName}QueryHandler.cs`
- **DTOs**: `{EntityName}Dto.cs`, `{EntityName}Vm.cs`
- **Endpoints**: `{EntityName}.cs`
- **Controllers**: `{EntityName}Controller.cs`
- **Configurations**: `{EntityName}Configuration.cs`
- **Reports**: `{report-type}_{date}.md`
- **Samples**: `{resource-type}_{purpose}_{date}.json`

## üéØ Common Tasks Quick Guide

### Creating New Entity
1. **Domain**: Create entity in `src/Domain/Entities/`
2. **Application**: Create commands/queries in `src/Application/[FeatureName]/`
3. **Infrastructure**: Add to `ApplicationDbContext` and create configuration
4. **Web**: Create endpoints in `src/Web/Endpoints/` or controllers in `src/Web/Controllers/`
5. **Samples**: Add sample data in `scripts/samples/resources/`
6. **Documentation**: Create API spec in `docs/api/specifications/`
7. **Report**: Generate implementation report in `docs/cursor-agent/reports/`

### Adding New Endpoint (API Pattern Decision Required)
1. **Determine Pattern**: Use API Pattern Rules to decide Controller vs Endpoint
2. **Create Implementation**: Use appropriate template from API Pattern Rules
3. **Add Authorization**: Implement proper authorization
4. **Update Mapping**: Add to endpoint group mapping or controller routing
5. **Update Documentation**: Update OpenAPI documentation
6. **Add Examples**: Add examples in `docs/api/examples/`

### Database Changes
1. Update entity in Domain layer
2. Create EF Core configuration
3. Generate migration: `dotnet ef migrations add [MigrationName]`
4. Update database: `dotnet ef database update`
5. Update sample data if needed

### Creating Documentation
1. Use proper templates for reports
2. Include metadata (date, agent, session ID, status)
3. Follow exact naming conventions
4. Update documentation index
5. Cross-reference related documents

## üö® Common Issues
- **Template Missing**: `dotnet new install Clean.Architecture.Solution.Template::9.0.12`
- **Build Issues**: Check `Directory.Packages.props` for version conflicts
- **Database Connection**: Verify connection string in `appsettings.Development.json`
- **Authentication**: Check JWT configuration and Azure Key Vault
- **Documentation**: Use proper templates and include metadata
- **API Pattern**: Always check API Pattern Rules before implementing endpoints

## üìö Reference Documents
- **Navigation Guide**: `docs/cursor-agent/workflows/DOCUMENTATION_STRUCTURE.md` - AI navigation guide
- **Core Rules**: `docs/cursor-agent/workflows/CURSOR_AI_RULES.md` - Core development rules and guidelines
- **Quick Reference**: `docs/cursor-agent/workflows/CURSOR_AI_QUICK_REFERENCE.md` - Common patterns and commands
- **Implementation Guide**: `docs/cursor-agent/workflows/IMPLEMENTATION_CHECKLIST.md` - Step-by-step implementation
- **Architecture Guide**: `docs/cursor-agent/workflows/ARCHITECTURE_GUIDE.md` - Detailed architecture patterns
- **Code Patterns**: `docs/cursor-agent/workflows/CODE_PATTERNS.md` - Implementation patterns and conventions
- **Security Guide**: `docs/cursor-agent/workflows/SECURITY_GUIDE.md` - Security and authentication
- **Database Guide**: `docs/cursor-agent/workflows/DATABASE_GUIDE.md` - Database design and EF Core
- **API Documentation**: `docs/api/` - API specifications, guides, examples
- **Cursor Agent Docs**: `docs/cursor-agent/` - Implementation reports, session logs

## üéØ API Pattern Auto-Discovery Instructions

### For Cursor AI:
When user mentions API development, new endpoints, or any of these keywords:
- **FHIR Keywords**: patient, observation, medication, healthcare, medical, clinical, fhir
- **Business Keywords**: user, todo, task, admin, system, analytics, report
- **Special Keywords**: health, webhook, integration, export, import, auth

**AUTOMATICALLY**:
1. **Search for**: `docs/cursor-agent/workflows/API_PATTERN_*.md`
2. **Read Priority Order**:
   - `API_PATTERN_INDEX.md` (Main index)
   - `API_PATTERN_QUICK_REFERENCE.md` (First)
   - `API_PATTERN_DECISION_MATRIX.md` (Second)
   - `API_PATTERN_RULE_ENGINE.md` (Third)
3. **Apply Decision Algorithm**: Use the pattern decision matrix
4. **Use Appropriate Template**: Follow the template guidelines
5. **Follow Validation Checklist**: Ensure compliance

### Decision Matrix Summary:
```
IF "patient" OR "fhir" OR "healthcare" OR "medical" OR "clinical"
    ‚Üí USE Minimal API Endpoints (FHIR compliance)
ELSE IF "user" OR "todo" OR "task" OR "admin" OR "system" OR "analytics"
    ‚Üí USE Controllers (Business logic)
ELSE IF "health" OR "webhook" OR "integration" OR "export" OR "import"
    ‚Üí USE Minimal API Endpoints (Special operations)
ELSE
    ‚Üí USE Controllers (Default)
```

---

**üéØ Remember**: Always follow Clean Architecture principles, use CQRS pattern, implement proper validation and authorization, and maintain high test coverage. **Document everything** and maintain comprehensive audit trails for all changes. **ALWAYS check API Pattern Rules before implementing any API feature!**
# FHIRAI - Cursor AI Project Index (Enhanced)

## üèóÔ∏è Project Overview
**FHIRAI** - Clean Architecture ASP.NET Core app with CQRS, PostgreSQL, Azure deployment. Template: Clean.Architecture.Solution.Template v9.0.12.

## üìÅ Core Structure
```
src/
‚îú‚îÄ‚îÄ Domain/           # Business entities, value objects, events
‚îú‚îÄ‚îÄ Application/      # Commands, queries, handlers, DTOs  
‚îú‚îÄ‚îÄ Infrastructure/   # Database, external services, identity
‚îî‚îÄ‚îÄ Web/             # API endpoints, configuration
```

## üîç Keyword Mapping to Documentation

### Architecture & Design
- **Clean Architecture** ‚Üí `docs/cursor-agent/workflows/ARCHITECTURE_GUIDE.md` ‚Üí Core Architecture Principles
- **CQRS** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Command Pattern & Query Pattern
- **SOLID** ‚Üí `docs/cursor-agent/workflows/ARCHITECTURE_GUIDE.md` ‚Üí SOLID Principles
- **Domain-Driven Design** ‚Üí `docs/cursor-agent/workflows/ARCHITECTURE_GUIDE.md` ‚Üí Domain-Driven Design
- **Design Patterns** ‚Üí `docs/cursor-agent/workflows/ARCHITECTURE_GUIDE.md` ‚Üí Design Patterns

### Development Workflow
- **New Feature** ‚Üí `docs/cursor-agent/workflows/IMPLEMENTATION_CHECKLIST.md` ‚Üí Feature Implementation Checklist
- **Code Generation** ‚Üí `docs/cursor-agent/workflows/CURSOR_AI_QUICK_REFERENCE.md` ‚Üí Code Generation Commands
- **Testing** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Testing Patterns
- **Code Review** ‚Üí `docs/cursor-agent/workflows/IMPLEMENTATION_CHECKLIST.md` ‚Üí Code Review Checklist

### Security & Authentication
- **Authentication** ‚Üí `docs/cursor-agent/workflows/SECURITY_GUIDE.md` ‚Üí Authentication System
- **Authorization** ‚Üí `docs/cursor-agent/workflows/SECURITY_GUIDE.md` ‚Üí Authorization Rules
- **JWT** ‚Üí `docs/cursor-agent/workflows/SECURITY_GUIDE.md` ‚Üí JWT Bearer Tokens
- **Azure Key Vault** ‚Üí `docs/cursor-agent/workflows/SECURITY_GUIDE.md` ‚Üí Azure Key Vault Integration
- **Security Best Practices** ‚Üí `docs/cursor-agent/workflows/SECURITY_GUIDE.md` ‚Üí Security Best Practices

### Database & Infrastructure
- **Entity Framework** ‚Üí `docs/cursor-agent/workflows/DATABASE_GUIDE.md` ‚Üí Entity Framework Configuration
- **PostgreSQL** ‚Üí `docs/cursor-agent/workflows/DATABASE_GUIDE.md` ‚Üí Database Design Principles
- **Migrations** ‚Üí `docs/cursor-agent/workflows/DATABASE_GUIDE.md` ‚Üí Migration Management
- **Database Performance** ‚Üí `docs/cursor-agent/workflows/DATABASE_GUIDE.md` ‚Üí Performance Optimization
- **Database Security** ‚Üí `docs/cursor-agent/workflows/DATABASE_GUIDE.md` ‚Üí Database Security

### API Development
- **Endpoints** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Endpoint Pattern
- **Minimal APIs** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Endpoint Pattern
- **Validation** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Command Pattern
- **DTOs** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí DTO Pattern
- **MediatR** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí MediatR I/O Patterns
- **ISender** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Using ISender in Endpoints
- **Paging** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Paging Patterns
- **Search** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Paging Query Handlers

### API Pattern Rules (CRITICAL - AUTO-DISCOVERY)
- **API Pattern** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_INDEX.md` ‚Üí **MAIN INDEX** - Auto-discovery guide
- **Quick Reference** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí **READ FIRST** - Immediate decision matrix
- **Decision Matrix** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_DECISION_MATRIX.md` ‚Üí **READ SECOND** - Detailed decision logic
- **Rule Engine** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_RULE_ENGINE.md` ‚Üí **READ THIRD** - Algorithm implementation
- **Optimized Guide** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_OPTIMIZED_GUIDE.md` ‚Üí Enhanced rules with improvements
- **Test Cases** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_TEST_CASES.md` ‚Üí Test scenarios and validation
- **Live Demo** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_DEMO.md` ‚Üí Real-world examples
- **Self Test** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_SELF_TEST.md` ‚Üí Self-reading capability test
- **Test Results** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_TEST_RESULTS.md` ‚Üí Implementation analysis

### FHIR Healthcare Resources
- **Patient** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí FHIR Endpoints (MANDATORY)
- **Observation** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí FHIR Endpoints (MANDATORY)
- **Medication** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí FHIR Endpoints (MANDATORY)
- **Healthcare** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí FHIR Endpoints (MANDATORY)
- **Medical** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí FHIR Endpoints (MANDATORY)
- **Clinical** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí FHIR Endpoints (MANDATORY)
- **Condition** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí FHIR Endpoints (MANDATORY)
- **Encounter** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí FHIR Endpoints (MANDATORY)
- **Diagnosis** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí FHIR Endpoints (MANDATORY)
- **Treatment** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí FHIR Endpoints (MANDATORY)

### Business/System Resources
- **User** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Controllers (RECOMMENDED)
- **Todo** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Controllers (RECOMMENDED)
- **Task** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Controllers (RECOMMENDED)
- **Admin** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Controllers (RECOMMENDED)
- **System** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Controllers (RECOMMENDED)
- **Analytics** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Controllers (RECOMMENDED)
- **Report** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Controllers (RECOMMENDED)
- **Dashboard** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Controllers (RECOMMENDED)
- **Organization** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Controllers (RECOMMENDED)
- **Department** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Controllers (RECOMMENDED)

### Special Operations
- **Health** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Minimal API Endpoints (FLEXIBLE)
- **Webhook** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Minimal API Endpoints (FLEXIBLE)
- **Integration** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Minimal API Endpoints (FLEXIBLE)
- **Export** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Minimal API Endpoints (FLEXIBLE)
- **Import** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Minimal API Endpoints (FLEXIBLE)
- **Auth** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Minimal API Endpoints (FLEXIBLE)
- **Callback** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Minimal API Endpoints (FLEXIBLE)
- **Third-party** ‚Üí `docs/cursor-agent/workflows/API_PATTERN_QUICK_REFERENCE.md` ‚Üí Minimal API Endpoints (FLEXIBLE)

### Code Quality
- **Naming Conventions** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Naming Conventions
- **Code Organization** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Code Organization
- **Performance** ‚Üí `docs/cursor-agent/workflows/CODE_PATTERNS.md` ‚Üí Performance Guidelines
- **Error Handling** ‚Üí `docs/cursor-agent/workflows/CURSOR_AI_QUICK_REFERENCE.md` ‚Üí Common Mistakes

### Documentation & Reporting
- **Implementation Reports** ‚Üí `docs/cursor-agent/workflows/CURSOR_AI_RULES.md` ‚Üí Cursor AI Specific Rules
- **API Documentation** ‚Üí `docs/api/` ‚Üí API specifications, guides, examples
- **Architecture Docs** ‚Üí `docs/architecture/` ‚Üí ADRs, diagrams, decisions
- **Session Logs** ‚Üí `docs/cursor-agent/logs/` ‚Üí Session tracking and audit trails

## üöÄ Quick Commands
```bash
# Build & Run
dotnet build -tl
cd ./src/Web/ && dotnet watch run

# Code Generation
dotnet new ca-usecase --name Create[Entity] --feature-name [FeatureName] --usecase-type command --return-type int
dotnet new ca-usecase -n Get[Entities] -fn [FeatureName] -ut query -rt [Entities]Vm

# Testing
dotnet test

# Azure Deployment
az login && azd up
```

## üìÅ Key File Locations
- **Domain Entities**: `src/Domain/Entities/`
- **Application Commands**: `src/Application/[FeatureName]/Commands/`
- **Application Queries**: `src/Application/[FeatureName]/Queries/`
- **API Endpoints**: `src/Web/Endpoints/`
- **API Controllers**: `src/Web/Controllers/`
- **Database Context**: `src/Infrastructure/Data/ApplicationDbContext.cs`
- **Infrastructure**: `infra/main.bicep`
- **API Documentation**: `docs/api/`
- **Implementation Reports**: `docs/cursor-agent/reports/`
- **Sample Data**: `scripts/samples/`
- **Cursor Agent Rules**: `docs/cursor-agent/workflows/`

## üè∑Ô∏è Naming Patterns
- **Entities**: `{EntityName}.cs`
- **Commands**: `{CommandName}Command.cs`, `{CommandName}CommandHandler.cs`
- **Queries**: `{QueryName}Query.cs`, `{QueryName}QueryHandler.cs`
- **DTOs**: `{EntityName}Dto.cs`, `{EntityName}Vm.cs`
- **Endpoints**: `{EntityName}.cs`
- **Controllers**: `{EntityName}Controller.cs`
- **Configurations**: `{EntityName}Configuration.cs`
- **Reports**: `{report-type}_{date}.md`
- **Samples**: `{resource-type}_{purpose}_{date}.json`

## üéØ Common Tasks Quick Guide

### Creating New Entity
1. **Domain**: Create entity in `src/Domain/Entities/`
2. **Application**: Create commands/queries in `src/Application/[FeatureName]/`
3. **Infrastructure**: Add to `ApplicationDbContext` and create configuration
4. **Web**: Create endpoints in `src/Web/Endpoints/` or controllers in `src/Web/Controllers/`
5. **Samples**: Add sample data in `scripts/samples/resources/`
6. **Documentation**: Create API spec in `docs/api/specifications/`
7. **Report**: Generate implementation report in `docs/cursor-agent/reports/`

### Adding New Endpoint (API Pattern Decision Required)
1. **Determine Pattern**: Use API Pattern Rules to decide Controller vs Endpoint
2. **Create Implementation**: Use appropriate template from API Pattern Rules
3. **Add Authorization**: Implement proper authorization
4. **Update Mapping**: Add to endpoint group mapping or controller routing
5. **Update Documentation**: Update OpenAPI documentation
6. **Add Examples**: Add examples in `docs/api/examples/`

### Database Changes
1. Update entity in Domain layer
2. Create EF Core configuration
3. Generate migration: `dotnet ef migrations add [MigrationName]`
4. Update database: `dotnet ef database update`
5. Update sample data if needed

### Creating Documentation
1. Use proper templates for reports
2. Include metadata (date, agent, session ID, status)
3. Follow exact naming conventions
4. Update documentation index
5. Cross-reference related documents

## üö® Common Issues
- **Template Missing**: `dotnet new install Clean.Architecture.Solution.Template::9.0.12`
- **Build Issues**: Check `Directory.Packages.props` for version conflicts
- **Database Connection**: Verify connection string in `appsettings.Development.json`
- **Authentication**: Check JWT configuration and Azure Key Vault
- **Documentation**: Use proper templates and include metadata
- **API Pattern**: Always check API Pattern Rules before implementing endpoints

## üìö Reference Documents
- **Navigation Guide**: `docs/cursor-agent/workflows/DOCUMENTATION_STRUCTURE.md` - AI navigation guide
- **Core Rules**: `docs/cursor-agent/workflows/CURSOR_AI_RULES.md` - Core development rules and guidelines
- **Quick Reference**: `docs/cursor-agent/workflows/CURSOR_AI_QUICK_REFERENCE.md` - Common patterns and commands
- **Implementation Guide**: `docs/cursor-agent/workflows/IMPLEMENTATION_CHECKLIST.md` - Step-by-step implementation
- **Architecture Guide**: `docs/cursor-agent/workflows/ARCHITECTURE_GUIDE.md` - Detailed architecture patterns
- **Code Patterns**: `docs/cursor-agent/workflows/CODE_PATTERNS.md` - Implementation patterns and conventions
- **Security Guide**: `docs/cursor-agent/workflows/SECURITY_GUIDE.md` - Security and authentication
- **Database Guide**: `docs/cursor-agent/workflows/DATABASE_GUIDE.md` - Database design and EF Core
- **API Documentation**: `docs/api/` - API specifications, guides, examples
- **Cursor Agent Docs**: `docs/cursor-agent/` - Implementation reports, session logs

## üéØ API Pattern Auto-Discovery Instructions

### For Cursor AI:
When user mentions API development, new endpoints, or any of these keywords:
- **FHIR Keywords**: patient, observation, medication, healthcare, medical, clinical, fhir
- **Business Keywords**: user, todo, task, admin, system, analytics, report
- **Special Keywords**: health, webhook, integration, export, import, auth

**AUTOMATICALLY**:
1. **Search for**: `docs/cursor-agent/workflows/API_PATTERN_*.md`
2. **Read Priority Order**:
   - `API_PATTERN_INDEX.md` (Main index)
   - `API_PATTERN_QUICK_REFERENCE.md` (First)
   - `API_PATTERN_DECISION_MATRIX.md` (Second)
   - `API_PATTERN_RULE_ENGINE.md` (Third)
3. **Apply Decision Algorithm**: Use the pattern decision matrix
4. **Use Appropriate Template**: Follow the template guidelines
5. **Follow Validation Checklist**: Ensure compliance

### Decision Matrix Summary:
```
IF "patient" OR "fhir" OR "healthcare" OR "medical" OR "clinical"
    ‚Üí USE Minimal API Endpoints (FHIR compliance)
ELSE IF "user" OR "todo" OR "task" OR "admin" OR "system" OR "analytics"
    ‚Üí USE Controllers (Business logic)
ELSE IF "health" OR "webhook" OR "integration" OR "export" OR "import"
    ‚Üí USE Minimal API Endpoints (Special operations)
ELSE
    ‚Üí USE Controllers (Default)
```

---

**üéØ Remember**: Always follow Clean Architecture principles, use CQRS pattern, implement proper validation and authorization, and maintain high test coverage. **Document everything** and maintain comprehensive audit trails for all changes. **ALWAYS check API Pattern Rules before implementing any API feature!**
